{
  "Statement": [
    {
      "Action": [
        "aws-marketplace:CreatePrivate*",
        "aws-marketplace:AssociateProductsWithPrivate*",
        "aws-marketplace:DescribePrivate*",
        "aws-marketplace:DisassociateProducts*",
        "aws-marketplace:ListPrivate*",
        "aws-marketplace:StartPrivate*",
        "aws-marketplace:StopPrivate*",
        "aws-marketplace:UpdatePrivate*"
      ],
      "Condition": {},
      "Effect": "Deny",
      "Resource": "*",
      "Sid": "PMP"
    },
    {
      "Condition": {
        "ArnLike": {
          "aws:PrincipalARN": [
            "arn:aws:iam::*:root"
          ]
        }
      },
      "Effect": "Deny",
      "NotAction": [
        "iam:CreateVirtualMFADevice",
        "iam:EnableMFADevice",
        "iam:GetUser",
        "iam:ListMFADevices",
        "iam:ListVirtualMFADevices",
        "iam:ResyncMFADevice",
        "aws-portal:*",
        "sts:GetSessionToken",
        "iam:DeleteVirtualMFADevice",
        "trustedadvisor:*",
        "support:*"
      ],
      "Resource": "*",
      "Sid": "ROOT"
    },
    {
      "Action": "ec2:RunInstances",
      "Condition": {
        "Bool": {
          "ec2:Encrypted": "false"
        }
      },
      "Effect": "Deny",
      "Resource": "arn:aws:ec2:*:*:volume/*",
      "Sid": "EBS1"
    },
    {
      "Action": "ec2:CreateVolume",
      "Condition": {
        "Bool": {
          "ec2:Encrypted": "false"
        }
      },
      "Effect": "Deny",
      "Resource": "*",
      "Sid": "EBS2"
    },
    {
      "Action": "elasticfilesystem:CreateFileSystem",
      "Condition": {
        "Bool": {
          "elasticfilesystem:Encrypted": "false"
        }
      },
      "Effect": "Deny",
      "Resource": "*",
      "Sid": "EFS"
    },
    {
      "Action": "rds:CreateDBInstance",
      "Condition": {
        "Bool": {
          "rds:StorageEncrypted": "false"
        },
        "StringNotLike": {
          "rds:DatabaseEngine": [
            "aurora*",
            "docdb*",
            "neptune"
          ]
        }
      },
      "Effect": "Deny",
      "Resource": "arn:aws:rds:*:*:db:*",
      "Sid": "RDS"
    },
    {
      "Action": "rds:CreateDBCluster",
      "Condition": {
        "Bool": {
          "rds:StorageEncrypted": "false"
        },
        "StringLike": {
          "rds:DatabaseEngine": [
            "aurora*",
            "docdb*",
            "neptune"
          ]
        }
      },
      "Effect": "Deny",
      "Resource": "*",
      "Sid": "AUR"
    },
    {
      "Action": [
        "organizations:LeaveOrg*",
        "aws-portal:Modify*",
        "aws-portal:ViewAccount",
        "aws-portal:ViewPaymentMethods",
        "ds:AcceptSharedDir*",
        "ds:ShareDir*",
        "ds:EnableSso",
        "ds:DisableSso",
        "ram:AcceptResourceShareInv*",
        "ram:AssociateResourceShare",
        "ram:CreateResourceShare",
        "ram:EnableSharingWithAwsOrg*",
        "lightsail:*",
        "sumerian:*",
        "gamelift:*",
        "appflow:*",
        "iq:*"
      ],
      "Condition": {
        "ArnNotLike": {
          "aws:PrincipalARN": [
            "arn:aws:iam::*:role/${ACCELERATOR_PREFIX}*",
            "arn:aws:iam::*:role/${ORG_ADMIN_ROLE}"
          ]
        }
      },
      "Effect": "Deny",
      "Resource": "*",
      "Sid": "OTHS"
    },
    {
      "Condition": {
        "ArnNotLike": {
          "aws:PrincipalARN": [
            "arn:aws:iam::*:role/${ACCELERATOR_PREFIX}*",
            "arn:aws:iam::*:role/${ORG_ADMIN_ROLE}",
            "arn:aws:iam::*:role/AWSServiceRoleFor*"
          ]
        },
        "StringNotEquals": {
          "aws:RequestedRegion": "${ADDL_REGIONS_C}"
        }
      },
      "Effect": "Deny",
      "NotAction": [
        "a4b:*",
        "access-analyzer:*",
        "aws-marketplace-management:*",
        "aws-marketplace:*",
        "aws-portal:*",
        "budgets:*",
        "ce:*",
        "chime:*",
        "cloudfront:*",
        "config:*",
        "cur:*",
        "directconnect:*",
        "ec2:DescribeRegions",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeVpnGateways",
        "fms:*",
        "globalaccelerator:*",
        "health:*",
        "iam:*",
        "networkmanager:*",
        "organizations:*",
        "pricing:*",
        "route53:*",
        "route53domains:*",
        "s3:GetAccountPublic*",
        "s3:GetBucketLocation",
        "s3:ListAllMyBuckets",
        "shield:*",
        "sts:*",
        "support:*",
        "trustedadvisor:*",
        "waf-regional:*",
        "waf:*",
        "wafv2:*",
        "route53-recovery-readiness:*",
        "route53-recovery-control-config:*",
        "s3:GetStorageLens*",
        "s3:ListStorageLens*",
        "s3:CreateMultiR*",
        "s3:DeleteMultiR*",
        "s3:DescribeMultiR*",
        "s3:GetMultiR*",
        "s3:ListMultiR*",
        "s3:PutMultiR*"
      ],
      "Resource": "*",
      "Sid": "GBL1"
    }
  ],
  "Version": "2012-10-17"
}